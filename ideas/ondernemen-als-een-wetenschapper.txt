Wat zou er gebeuren als je een bedrijf leidt als wetenschapper, niet als manager?

Feiten, geen meningen: <data driven, cf. lean business en http://primitus.com/blog/why-did-so-many-successful-entrepreneurs-and-startups-come-out-of-paypal-answered-by-insiders/>


## Consistentie en controle

<reproduceerbare interacties, scripts, procedures ... cf. E-Myth>

- het is belangrijk dat er voor de klant een bepaalde _ervaring_ wordt gemaakt. Dat betekent oa.
	- vaste communicatiestandaarden (wanneer mailen we, welke toon hebben mails, hoe gaan we om met problemen, hoe kondigen we complicaties aan, hoe doen we een voorstel als dat niet in het oorspronkelijke plan zat, wanneer mailen we vs. wanneer bellen we vs. wanneer gaan we langs)
	- hoe zijn meetings gestructureerd? hoe bereiden we ons voor? wat brengen we mee? maken we achteraf een verslag? hoe volgen we op? (bv. ons verslag doorsturen en vragen of er sindsdien nog bedenkingen bijkwamen of meningen zijn veranderd -- wat vaak zo is; dit verslag moet altijd op een vast moment na de meeting worden doorgestuurd, bv. één dag later op hetzelfde uur waarop de meeting aanving oid.)
	- hoe verwelkomen we een klant? (bv. met een toegestuurde brief met uitscheurbare kaartjes met gebruikersnaam en wachtwoord voor het dashboard waar ze ons project kunnen volgen, en handgeschreven "bedankt voor je vertrouwen" met een handtekening van ons team)



## Laat mensen doen waar mensen best in zijn

Goede, gestroomlijnde processen zorgen er voor dat creativiteit en inventiviteit kan aangewend worden waar ze nodig is, terwijl routinetaken ook écht routine zijn. (Het verschil met traditionele grote ondernemingen, die ook alles zoveel mogelijk in regeltjes gieten, is dat wij de nadruk leggen op het routine maken van alles wat routine moet zijn, maar verder werknemers zo vrij mogelijk laten.)

* mail voorbeeld: Correspondentie die al een werkdag onbeantwoord blijft licht automatisch op in het systeem voor iedereen, ook al is ze persoonlijk aan iemand anders geaddresseerd.

--> dus door de banale dingen in procedures te gieten, laat je mensen vrij om hun mentale energie echt in belangrijke, creatieve zaken te steken




De klant en zijn wensen zijn bullshit. Altijd die telefoons en e-mails op de meest bizarre momenten met de meest onnozele vragen. Projecten die barslecht zijn uitgedacht. Onmogelijke deadlines. Eigenlijk willen we gewoon met rust gelaten worden en kunnen programmeren. We willen ons niks aantrekken van de klant. Dus hebben we een manier nodig om onze omgang met de klant zo routineus en zo gestroomlijnd mogelijk te maken, net omdat je dan niet moet nadenken over allerlei trivialiteiten maar gewoon je werk kan doen.

Als je exact weet wanneer je naar wie moet telefoneren, als je exact weet hoe de documentatie of de schetsen voor een klant er moeten uitzien, als je exact weet hoe een vergadering met een klant verloopt, dan moet je er geen mentale energie insteken en dan kan al je creativiteit naar het werk zelf gaan. Zelfs de persoon die de requirements opstelt en die het domein analyseert, wil uiteindelijk nadenken over hoe de radertjes draaien, en de klant is maar één deel in dat proces. Door tot in de puntjes te regelen hoe we omgaan met klanten, en ook hoe we een project van begin tot einde structureren, kunnen we ons bezighouden met de lollige dingen.

In die zin mag de routine ook leuk zijn, bv. een vast moment voor code reviews, die kunnen eindigen met een drankje en wat bijpraten. (bv. vrijdagavond, zodat mensen tijdens het weekend wat kunnen nadenken over de implicaties van hetgeen besproken werd, zonder direct aan het hacken te moeten slaan).



## Experimenteren en hacken

de mogelijkheid om heel strikte omgangsvormen te doen leiden tot een gezondere bedrijfscultuur waar iedereen zich beter voelt en waar iedereen graag werkt (dus structuur <=> steriel); wetenschappelijk ondernemen als een spel; wetenschappelijk ondernemen als een uitdaging ("laat ons, de techneuten, eens tonen aan self-proclaimed managers hoe je een bedrijf runt" -- hackermentaliteit)



Behalve deze "focus op de good stuff, de rest maken we routine"-aanpak zou ik ook het wetenschappelijke aspect willen aanhalen: we proberen een next-gen devshop op te bouwen, en door kwantificering en vaste processen kunnen we experimenteren met wat werkt en wat niet werkt. De hoogste efficiëntie met de laagste inspanning is een uitdaging of een spel, waar op zich ook veel creatieve energie naartoe kan vloeien. Lean business-principes.


<data driven, cf. lean business en http://primitus.com/blog/why-did-so-many-successful-entrepreneurs-and-startups-come-out-of-paypal-answered-by-insiders/>


## McDonaldificatie

Bijkomend punt is ook dat op deze manier 'top notch' niet moet gelijkstaan met 'absurd duur'. Omdat alles in een proces gegoten zit zijn er weinig verrassingen, moet er amper nagedacht worden over "wat nu?", zijn de engineers zeer gefocust, en kan er dus voor een redelijk uurloon gewerkt worden. Het feit dat we uren moeten inrekenen voor QA en testing betekent natuurlijk een meerprijs, maar ongeteste software zorgt toch voor problemen op termijn en als die moeten opgelost worden, moeten we ze ook factureren (wat véél lastiger is, gezien de klant het gevoel heeft te moeten betalen voor ons gepruts).




* illustreren met een paar verhalen (eigen ervaringen, version control bij xio, hoe vaak mensen wel niet mails vergeten die dan in hun gezicht opblazen of tot verloren kansen leiden, ...)