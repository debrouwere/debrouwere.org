* usability is 1/3 having a good grounding in the field, in what works and what doesn't work, and it's 2/3 knowing who your customer is, eating your own dogfood and that kind of thing.
* making sure that your product provides a great user experience, comes 1/3 from having a good UX strategy, and 2/3 from actually implementing that strategy -- most "UX" work is actually work developers have to do: implement new features, refine existing ones so they work better with certain UI cues, etc.
* people bullshit on developers for so often delivering a bad user experience. Sometimes that's because developers just don't care about UX. Just as often it's because they're flooded with requests to implement all kinds of different things, so they don't have the time to get to the necessary back-end work that's necessary to make the front-end shine. Think autocompletes, think faceted navigation (which takes a lot of config), think being more lax/friendly in form validation, think providing better error messages, think good documentation.

Any concerted effort by a usability expert needs to be backed up by the concerted effort of a front-end engineer and a back-end engineer. And before you get started hiring somebody to do UX, think about whether you're currently constrained because (1) you feel you don't have enough grip on your customers, clients or don't know enough about how to make things user-friendly, or, (B) because you have a big backlog of things that would really help out your customers, but you never seem to have the time to start implementing those. The former requires the help of a usability expert or information architect, but the latter simply requires that you either change your priorities (tackling dev work with a clear impact on user experience first) or look towards expanding your dev team so you'll have more time to work on features that improve usability.

Most bad UX comes from a lack of product focus or from a lack of time. Not from a lack of experience.
