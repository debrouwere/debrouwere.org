---
language: en
layout: post
categories:
    - information architecture
    - coding
title: The trouble with usability experts
---

The demand for usability and user experiences gurus just won't go away, will it? That's a good thing for one single reason: programmers aren't very good at creating things that are easy and pleasant to use. Not as a rule. But believing usability experts to be guys and girls with supernatural powers to save the day and save your app, well, that might backfire, and here's why: 

# You should always know more about your target market than any user experience guru does. Usability is 1/3 having a good grounding in the field, 2/3 knowing what the heck it is you're doing and who you're doing it for. Anything you, as a PM or coder, lack in skill, you make up for in sheer amount of observation and conversations with clients. If this isn't true, make it true, or be prepared to keep making crappy software.
# A product with a great user experience derives 1/3 from having a good UX strategy, and 2/3 from actually implementing that strategy. Most UX work is actually work developers have to do: implement new features, refine existing ones and get rid of confusing features or replace them with something better. Think autocompletes, think faceted navigation (which takes a lot of config), think being more lax/friendly in form validation, think providing better error messages, think good documentation. These take time, not an intimate knowledge of user experience.

Ask yourself this: is my software not as user-friendly as it could be because (1) we don't have enough grip on your customers, (2) we don't have time to do what we know we should be doing or (3) we don't know how to make things user-friendly. Only in the third case does the help of a user experience expert make sense.

Any concerted effort by a usability expert needs to be backed up by the concerted effort of a front-end engineer and a back-end engineer. If what's keeping you from delivering great software is a big backlog of improvements that would really help out your customers, but never seem to get implemented in a timely manner, fix that problem first. Change your priorities by tackling dev work with a clear impact on user experience first, or look towards expanding your dev team so you'll have more time to work on features that improve usability.

Most bad UX comes from a lack of product focus or from a lack of time. Not from a lack of experience.