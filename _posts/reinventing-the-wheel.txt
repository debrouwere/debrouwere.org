Reinventing the wheel

Iets over de merde van scalability, design by committee, de nood aan experimentatie, en dat duplication of effort _tot op een bepaalde hoogte_ zinvol is, omdat je tijdens het maken van dingen ook vanalles bijleert dat niet direct te maken heeft met het eindproduct enz. (Wat in de opensource-wereld mooi gebeurt: enerzijds gaan mensen bestaande projecten proberen verbeteren en vervoegen zelfs al doen ze niet exact wat ze willen, maar anderzijds zeggen mensen soms ook gewoon, "fuck it, ik maak zelf iets" -- en dat is echt een mooie, succesvolle middenweg.)

(in verband met een voorstel http://www.niemanlab.org/2010/08/seeking-sustainability-part-4-texas-tribunes-evan-smith-on-the-many-tensions-of-technology/)

-------

Rolling your own / maintainability / NIH

Often, software developers like coding just a little too much >for their own good< (http://en.wikipedia.org/wiki/Not_Invented_Here#In_computing). We develop software that already exists because we think we can do a better job, and because we're not usually confronted with how much it costs an employer to keep us employed (tip: a lot). We think of an obscure feature that existing software doesn't have, and portray that as a dealbreaker: surely now we must develop something on our own, because what we want simply doesn't exist yet.

<=> maar dat ook contrasteren met de waarde van "rolling your own" bij wat je core business is

<=> ook aanstippen dat je maintainability breed moet zijn: veel gebruik maken van beschikbare packages enz. is goed, maar als de kans er in bestaat dat je er zelf in moet zitten prullen, of als je overweegt om packages te gebruiken die niet 100% stabiel zijn, kan je je daarmee ferm in de problemen werken

<=> ook aanduiden dat je in Django op een andere manier probeert te vermijden zelf werk te moeten doen, bv. door "best of breed" applicaties te gebruiken waar mogelijk (bv. Wordpress voor een bloggedeelte), aangevuld met publieke API's en python libraries -- de nadruk ligt niet zoals bij de meeste CMSen op modules of plugins, maar dat betekent niet dat er geen hergebruik gebeurt, wel in tegendeel.

<=> Doch anderzijds dan weer: als je nog niet 100% weet wat je wil is "instant application development" (vs. RAD) wel handig.